🎯 COMPREHENSIVE APP DEVELOPMENT PROMPT
Project Overview
Build an Android expense tracking app that captures UPI transactions via SMS parsing and manual entry, with a focus on daily transaction labeling.

📋 CORE FEATURES
1. Transaction Capture Methods
A. Automatic SMS Parsing (Primary)
SMS Source Pattern:

Sender format: ??-AXISBK-S (where ?? = AD, JD, CP, etc.)
Regex pattern: ^[A-Z]{2}-AXISBK-S$

Two SMS Formats to Parse:
Format 1 - DEBIT:
INR XX.XX debited
A/c no. XX3248
02-10-25, 20:05:59
UPI/P2M/527537387973/MANGARAM CHOWDARY
Not you? SMS BLOCKUPI Cust ID to 91XXXXXXXX
Axis Bank
Format 2 - CREDIT:
INR XXXXX.00 credited
A/c no. XX3248
28-09-25, 20:05:06 IST
UPI/P2A/512654122901/MADDU REV/AXIS BANK - Axis Bank
Extraction Requirements:

Amount (decimal format)
Transaction type (debited/credited)
Account number (XX3248)
Date (DD-MM-YY format)
Time (HH:MM:SS format)
Receiver/Sender name (from UPI reference line)
UPI reference number (full UPI/P2M/... or UPI/P2A/... string)
Bank (Axis Bank - hardcoded from sender)

B. Manual Smart Template Entry (Backup)
Quick-add floating action button (FAB) with pre-filled template:

Amount (number input)
Transaction type (Debit/Credit toggle)
Receiver/Sender name (text input)
Date (date picker - default today)
Time (time picker - default now)
Tag/Label (text input)
Save button


🗄️ DATABASE SCHEMA
sqlCREATE TABLE transactions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    amount REAL NOT NULL,
    transaction_type TEXT NOT NULL, -- 'DEBIT' or 'CREDIT'
    account_number TEXT DEFAULT 'XX3248',
    transaction_date TEXT NOT NULL, -- Format: YYYY-MM-DD
    transaction_time TEXT NOT NULL, -- Format: HH:MM:SS
    receiver_sender_name TEXT NOT NULL,
    upi_reference TEXT,
    bank_name TEXT DEFAULT 'Axis Bank',
    user_tag TEXT, -- User's custom label (nullable)
    is_tagged BOOLEAN DEFAULT 0, -- 0 = not tagged, 1 = tagged
    entry_method TEXT NOT NULL, -- 'SMS' or 'MANUAL'
    raw_sms_text TEXT, -- Store original SMS for debugging
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

🎨 UI/UX DESIGN SPECIFICATIONS
Color Scheme

Debit transactions: Red (#EF4444) - text, icons, badges
Credit transactions: Green (#10B981) - text, icons, badges
Primary app color: Modern blue (#3B82F6)
Background: Clean white with subtle gray backgrounds for cards
Untagged items: Yellow/amber accent (#F59E0B) for "needs attention"

Screen 1: HOME SCREEN (Main Dashboard)
Layout:
┌─────────────────────────────────────┐
│  💰 Expense Tracker    [⚙️Settings] │
│                                      │
│  📅 Today - 03 Oct 2025    [⏰ 24h] │ (Time format toggle)
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🔴 ₹150.00  DEBITED         │   │
│  │ MANGARAM CHOWDARY            │   │
│  │ 20:05  •  [+ Add Tag]       │   │
│  └──────────────────────────────┘   │
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🟢 ₹5000.00  CREDITED       │   │
│  │ MADDU REV                    │   │
│  │ 20:05  •  Salary 💼         │   │ (Shows tag if added)
│  └──────────────────────────────┘   │
│                                      │
│  [View Untagged (3)] [All History]  │ (Bottom buttons)
│                                      │
│                    [➕]              │ (FAB - Manual entry)
└─────────────────────────────────────┘
Features:

Today's transactions listed chronologically (newest first)
Tap any transaction card to open detail/tag screen
Red/green left border on cards based on debit/credit
Small amber dot indicator for untagged transactions
Bottom navigation: "Untagged" and "All History" buttons

Screen 2: TRANSACTION DETAIL / LABEL ENTRY
Layout:
┌─────────────────────────────────────┐
│  ← Back                    [Save ✓] │
├─────────────────────────────────────┤
│                                      │
│         🔴                           │ (Animated icon - pulsing)
│      (Arrow Down)                    │
│                                      │
│       ₹ 150.00                       │ (Large, bold, red color)
│     ┌─────────┐                      │
│     │ DEBITED │                      │ (Red badge with rounded corners)
│     └─────────┘                      │
│                                      │
├─────────────────────────────────────┤
│                                      │
│  📅  02 Oct 2025  •  20:05:59       │ (Shows 24h, toggleable)
│  👤  MANGARAM CHOWDARY               │
│  💳  Axis Bank (XX3248)              │
│  🔗  UPI/P2M/527537387973            │
│                                      │
├─────────────────────────────────────┤
│                                      │
│  ✏️  Add Your Tag                    │
│  ┌────────────────────────────────┐ │
│  │ e.g., Milk, Grocery, Fuel...  │ │ (Text input with hint)
│  └────────────────────────────────┘ │
│                                      │
│  💡 Quick Tags:                      │
│  [Groceries] [Transport] [Food]     │ (Tappable chips - optional later)
│                                      │
└─────────────────────────────────────┘
Animations:

Screen slides in from bottom when opened
Amount number "pops" with scale animation (1.0 → 1.1 → 1.0)
Debit/Credit icon pulses once on load
Badge has subtle shadow and appears with fade-in
Keyboard smoothly slides up for tag input
Save button shows checkmark animation on success

For CREDIT transactions:

Icon: 🟢 with arrow UP
Color: Green (#10B981)
Badge: "CREDITED" in green

Screen 3: UNTAGGED TRANSACTIONS
Layout:
┌─────────────────────────────────────┐
│  ← Back        Untagged (3)         │
│                                      │
│  ⚠️ These transactions need labels  │
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🔴 ₹150.00  • 02 Oct         │   │
│  │ MANGARAM CHOWDARY             │   │
│  │ [+ Add Tag]                   │   │
│  └──────────────────────────────┘   │
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🔴 ₹89.00  • 01 Oct          │   │
│  │ KIRANA STORE                  │   │
│  │ [+ Add Tag]                   │   │
│  └──────────────────────────────┘   │
│                                      │
└─────────────────────────────────────┘
Features:

Shows only transactions where is_tagged = 0
Sorted by date (newest first)
Tap to open detail screen
Amber/yellow accent to emphasize "action needed"

Screen 4: ALL HISTORY
Layout:
┌─────────────────────────────────────┐
│  ← Back        All Transactions     │
│                                      │
│  🔍 Search...           [Filter 🎛️] │
│                                      │
│  📅 October 2025                     │
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🔴 ₹150.00  • 02 Oct 20:05   │   │
│  │ MANGARAM CHOWDARY              │   │
│  │ Milk 🥛                       │   │ (Tag shown)
│  └──────────────────────────────┘   │
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🟢 ₹5000.00  • 28 Sep 20:05  │   │
│  │ MADDU REV                     │   │
│  │ Salary 💼                     │   │
│  └──────────────────────────────┘   │
│                                      │
│  ┌──────────────────────────────┐   │
│  │ 🔴 ₹89.00  • 27 Sep 15:30    │   │
│  │ KIRANA STORE                   │   │
│  │ [+ Add Tag]                   │   │ (Untagged - can add)
│  └──────────────────────────────┘   │
│                                      │
└─────────────────────────────────────┘
Features:

Shows ALL transactions (tagged and untagged)
Search by receiver name or tag
Filter by: Date range, Debit/Credit, Tagged/Untagged
Grouped by month with headers
Tap any transaction to view/edit tag
Infinite scroll for older transactions


⚙️ SETTINGS SCREEN
┌─────────────────────────────────────┐
│  ← Back        Settings              │
│                                      │
│  ⏰ Time Format                      │
│     [Toggle: 24h ←→ 12h]            │
│                                      │
│  📱 Permissions                      │
│     SMS Access: ✓ Granted            │
│                                      │
│  🔔 Notifications                    │
│     New Transaction Alert: [ON]      │
│                                      │
│  📤 Export Data                      │
│     [Export to CSV]                  │
│                                      │
│  ℹ️  About                           │
│     Version 1.0.0                    │
│                                      │
└─────────────────────────────────────┘

🔔 NOTIFICATION SYSTEM
When SMS is captured:

Notification title: "New Transaction Captured 💰"
Content: "₹150.00 to MANGARAM CHOWDARY - Tap to add label"
Action button: "Add Tag"
Tapping opens the transaction detail screen directly
Priority: High (shows heads-up notification)


📱 TECHNICAL REQUIREMENTS
Android Specifications

Platform: Android (Kotlin preferred, Java acceptable)
Minimum SDK: API 24 (Android 7.0)
Target SDK: API 34 (Android 14)
Architecture: MVVM (Model-View-ViewModel)

Core Libraries
gradle// Database
implementation 'androidx.room:room-runtime:2.6.0'
kapt 'androidx.room:room-compiler:2.6.0'
implementation 'androidx.room:room-ktx:2.6.0'

// UI
implementation 'com.google.android.material:material:1.10.0'
implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

// Animations
implementation 'com.airbnb.android:lottie:6.1.0' // Optional for complex animations

// Coroutines
implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

// ViewModel & LiveData
implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
Permissions Required
xml<uses-permission android:name="android.permission.RECEIVE_SMS" />
<uses-permission android:name="android.permission.READ_SMS" />
<uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

🔍 SMS PARSING LOGIC
Regex Patterns
For Amount:
regexINR\s+([\d,]+\.?\d{0,2})
For Transaction Type:
regex(debited|credited)
For Account Number:
regexA/c no\.\s+(\w+)
For Date & Time:
regex(\d{2}-\d{2}-\d{2}),\s+(\d{2}:\d{2}:\d{2})
For Receiver/Sender Name:
regexUPI/P2[MA]/\d+/([^/\n]+)
For UPI Reference:
regex(UPI/P2[MA]/\d+/[^\n]+)
SMS Receiver Implementation
kotlinclass TransactionSmsReceiver : BroadcastReceiver() {
    override fun onReceive(context: Context, intent: Intent) {
        if (intent.action == Telephony.Sms.Intents.SMS_RECEIVED_ACTION) {
            val bundle = intent.extras
            val messages = Telephony.Sms.Intents.getMessagesFromIntent(intent)
            
            for (message in messages) {
                val sender = message.displayOriginatingAddress
                val body = message.messageBody
                
                // Check if sender matches ??-AXISBK-S pattern
                if (sender.matches(Regex("^[A-Z]{2}-AXISBK-S$"))) {
                    parseAndSaveTransaction(context, body, sender)
                }
            }
        }
    }
    
    private fun parseAndSaveTransaction(context: Context, smsBody: String, sender: String) {
        // Parse SMS and save to database
        // Show notification after saving
    }
}

🎬 ANIMATION SPECIFICATIONS
Transaction Card Animations

Entry: Slide up with fade (300ms, DecelerateInterpolator)
Tap: Ripple effect + scale down slightly (0.98)
Swipe: Reveal "Edit" and "Delete" options (optional for later)

Detail Screen Animations

Screen entry: Slide up from bottom (400ms)
Amount pop: Scale 1.0 → 1.15 → 1.0 (500ms, OvershootInterpolator)
Icon pulse: Scale 1.0 → 1.2 → 1.0 + alpha 1.0 → 0.7 → 1.0 (600ms)
Badge appear: Fade in + slide from left (300ms)
Save success: Checkmark icon with scale animation + success toast

Time Format Toggle

Toggle animation: Smooth slide with 200ms duration
Text update: Cross-fade between 24h and 12h format


📊 PROJECT STRUCTURE
app/
├── data/
│   ├── database/
│   │   ├── TransactionDatabase.kt
│   │   ├── TransactionDao.kt
│   │   └── TransactionEntity.kt
│   ├── repository/
│   │   └── TransactionRepository.kt
│   └── model/
│       └── Transaction.kt
├── ui/
│   ├── home/
│   │   ├── HomeActivity.kt
│   │   ├── HomeViewModel.kt
│   │   └── TransactionAdapter.kt
│   ├── detail/
│   │   ├── TransactionDetailActivity.kt
│   │   └── DetailViewModel.kt
│   ├── history/
│   │   ├── HistoryActivity.kt
│   │   └── HistoryViewModel.kt
│   ├── untagged/
│   │   ├── UntaggedActivity.kt
│   │   └── UntaggedViewModel.kt
│   └── manual/
│       └── ManualEntryDialog.kt
├── sms/
│   ├── TransactionSmsReceiver.kt
│   └── SmsParser.kt
├── notification/
│   └── TransactionNotificationHelper.kt
└── utils/
    ├── DateTimeFormatter.kt
    ├── CurrencyFormatter.kt
    └── Constants.kt

🚀 IMPLEMENTATION PHASES
Phase 1: Core Foundation (Start Here)

✅ Set up project with Room database
✅ Create TransactionEntity and DAO
✅ Implement SMS receiver with sender pattern filter
✅ Build SMS parser with regex for both debit/credit formats
✅ Create basic Home screen with transaction list
✅ Implement transaction detail screen with tag input

Phase 2: UI Polish

✅ Add color coding (red/green for debit/credit)
✅ Implement animations (pop, slide, pulse)
✅ Design modern card layouts with Material Design
✅ Add FAB for manual entry

Phase 3: Additional Screens

✅ Build "Untagged" transactions screen
✅ Create "All History" screen with filters
✅ Implement search functionality
✅ Add time format toggle (24h ↔ 12h)

Phase 4: Notifications & Settings

✅ Build notification system for new transactions
✅ Create Settings screen
✅ Implement permissions handling with user-friendly dialogs
✅ Add export to CSV feature


✅ ACCEPTANCE CRITERIA
The app is complete when:

✅ SMS from ??-AXISBK-S are automatically captured
✅ Both debit and credit transactions are correctly parsed
✅ Transactions appear on Home screen immediately
✅ User can tap any transaction to add a tag/label
✅ Tags are saved and displayed on transaction cards
✅ "Untagged" screen shows only unlabeled transactions
✅ "All History" shows complete transaction history
✅ Manual entry dialog works for missed transactions
✅ Notifications appear for new transactions
✅ Time format toggle works (24h ↔ 12h)
✅ Animations are smooth and modern
✅ Debit = Red, Credit = Green color coding throughout
✅ App handles permissions gracefully
✅ No crashes, smooth performance


🎯 CRITICAL SUCCESS FACTORS

Accurate SMS Parsing: Must extract ALL fields correctly from both message formats
User Experience: Adding tags should be quick (< 5 seconds per transaction)
Visual Clarity: User should instantly know if transaction is debit or credit
Reliability: SMS receiver must work in background, even when app is closed
Performance: Smooth scrolling even with 1000+ transactions
Data Integrity: Never lose transaction data


🔐 PRIVACY & SECURITY NOTES

All data stored locally (SQLite) - no cloud sync
SMS permission only used for Axis Bank messages
Clear privacy policy explaining SMS usage
Option to delete all data in Settings
No analytics or tracking


📝 DELIVERABLES EXPECTED
Please provide:

Complete Android Studio project with all source files
README.md with setup instructions
Screenshots of each screen
APK file for testing
Documentation for:

How SMS parsing works
Database schema explanation
How to add new features later


Code comments explaining complex regex and logic


🎨 DESIGN INSPIRATION
Modern, clean, minimal aesthetic inspired by:

Google Pay transaction history
Splitwise expense design
Material Design 3 guidelines
Smooth animations like iOS apps


🚫 OUT OF SCOPE (For Later Phases)

❌ Tag suggestions based on AI/ML
❌ Multiple bank account support
❌ Budget tracking
❌ Expense categories
❌ Charts and analytics
❌ Cloud backup
❌ Multi-user support
❌ Recurring transaction detection


⚡ QUICK START CHECKLIST FOR DEVELOPER
[ ] Clone/create Android project
[ ] Add Room, Material Design dependencies
[ ] Create database schema (Transaction table)
[ ] Implement SMS receiver with Axis Bank filter
[ ] Build SMS parser with regex patterns
[ ] Create Home screen UI
[ ] Create Detail/Tag entry screen
[ ] Add notification system
[ ] Implement manual entry dialog
[ ] Build Untagged screen
[ ] Build History screen
[ ] Add animations
[ ] Add time format toggle
[ ] Test with real SMS
[ ] Handle permissions
[ ] Polish UI
[ ] Generate APK
